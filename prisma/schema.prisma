generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_LOCAL")
}

model Fit {
  id                         Int                          @id @default(autoincrement())
  mold                       String
  product_code               String
  client                     String
  date                       DateTime
  process                    String
  Controller_attention_point Controller_attention_point[]
  Workstation                Workstation[]
  Image_and_description      Image_and_description[]
}

model Controller_attention_point {
  id             Int    @id @default(autoincrement())
  technician     String
  control_method String
  sample         String
  reaction_plan  String
  fit            Fit    @relation(fields: [fitId], references: [id])
  fitId          Int
}

model Workstation {
  id                              Int                               @id @default(autoincrement())
  requirements_and_specifications Requirements_and_specifications[] @relation("Requirements_and_specifications")
  specifics_requirements_client   String
  img_layout_path                 String
  devices                         Devices[]                         @relation("Devices")
  used_tools                      Used_tools[]                      @relation("Used_tools")
  safety                          Safety[]                          @relation("Safety")
  img_and_description             Image_and_description[]
  createdAt                       DateTime                          @default(now())
  updatedAt                       DateTime                          @updatedAt
  fit                             Fit                               @relation(fields: [fitId], references: [id])
  fitId                           Int
}

model Requirements_and_specifications {
  id             Int         @id @default(autoincrement())
  requirements   String
  specifications String
  workstation    Workstation @relation("Requirements_and_specifications", fields: [workstationId], references: [id])
  workstationId  Int
}

model Devices {
  id            Int         @id @default(autoincrement())
  description   String
  code          String
  quantity      Int
  workstation   Workstation @relation("Devices", fields: [workstationId], references: [id])
  workstationId Int
}

model Used_tools {
  id              Int         @id @default(autoincrement())
  pliers          Boolean
  box_cutter      Boolean
  screen_printing Boolean
  outros          String
  workstation     Workstation @relation("Used_tools", fields: [workstationId], references: [id])
  workstationId   Int
}

model Safety {
  id             Int         @id @default(autoincrement())
  helmet         Boolean
  earplug        Boolean
  safety_goggles Boolean
  safety_gloves  Boolean
  safety_mask    Boolean
  safety_boot    Boolean
  outros         String
  workstation    Workstation @relation("Safety", fields: [workstationId], references: [id])
  workstationId  Int
}

model Type {
  id                    Int                     @id @default(autoincrement())
  type                  String
  Image_and_description Image_and_description[]
}

model Image_and_description {
  id            Int         @id @default(autoincrement())
  img_path      String
  description   String
  type          Type        @relation(fields: [typeId], references: [id])
  typeId        Int
  fit           Fit         @relation(fields: [fitId], references: [id])
  fitId         Int
  workstation   Workstation @relation(fields: [workstationId], references: [id])
  workstationId Int
}
