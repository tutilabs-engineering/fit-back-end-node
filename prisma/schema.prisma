generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_LOCAL")
}

model Fit {
  id                      Int                       @id @default(autoincrement())
  mold                    String
  mold_code               String
  product_code            String
  product_description     String
  client                  String
  process                 String
  date                    DateTime                  @default(now())
  technician              String
  Homologation            Homologation[]
  Attention_point_control Attention_point_control[]
  Workstation             Workstation[]
}

model Attention_point_control {
  id                   Int    @id @default(autoincrement())
  requirements         String
  specifications       String
  evaluation_technique String
  control_method       String
  sample               String
  reaction_plan        String
  fit                  Fit    @relation(fields: [fitId], references: [id])
  fitId                Int
}

model Workstation {
  id                            Int                         @id @default(autoincrement())
  safety                        Safety[]                    @relation("Safety")
  used_tools                    Used_tools[]                @relation("Used_tools")
  materials                     Materials[]                 @relation("Materials")
  devices                       Devices[]                   @relation("Devices")
  img_layout_path               String
  Image_operation               Image_operation[]
  Image_package_description     Image_package_description[]
  Image_final_product           Image_final_product[]
  specifics_requirements_client String
  createdAt                     DateTime                    @default(now())
  updatedAt                     DateTime                    @updatedAt
  fit                           Fit                         @relation(fields: [fitId], references: [id])
  fitId                         Int
}

model Safety {
  id             Int         @id @default(autoincrement())
  helmet         Boolean     @default(false)
  earplug        Boolean     @default(false)
  safety_goggles Boolean     @default(false)
  safety_gloves  Boolean     @default(false)
  safety_mask    Boolean     @default(false)
  safety_boot    Boolean     @default(false)
  outros         String
  workstation    Workstation @relation("Safety", fields: [workstationId], references: [id])
  workstationId  Int
}

model Used_tools {
  id              Int         @id @default(autoincrement())
  pliers          Boolean     @default(false)
  box_cutter      Boolean     @default(false)
  screen_printing Boolean     @default(false)
  outros          String
  workstation     Workstation @relation("Used_tools", fields: [workstationId], references: [id])
  workstationId   Int
}

model Image_operation {
  id            Int         @id @default(autoincrement())
  img_path      String
  description   String
  workstation   Workstation @relation(fields: [workstationId], references: [id])
  workstationId Int
}

model Image_final_product {
  id            Int         @id @default(autoincrement())
  img_path      String
  description   String
  workstation   Workstation @relation(fields: [workstationId], references: [id])
  workstationId Int
}

model Image_package_description {
  id            Int         @id @default(autoincrement())
  img_path      String
  description   String
  workstation   Workstation @relation(fields: [workstationId], references: [id])
  workstationId Int
}

model Materials {
  id            Int         @id @default(autoincrement())
  sap_code      String
  description   String
  quantity      Int
  workstation   Workstation @relation("Materials", fields: [workstationId], references: [id])
  workstationId Int
}

model Devices {
  id            Int         @id @default(autoincrement())
  description   String
  code          String
  quantity      Int
  workstation   Workstation @relation("Devices", fields: [workstationId], references: [id])
  workstationId Int
}

model Homologation {
  id                Int    @id @default(autoincrement())
  user_created      Json
  user_homologation Json?
  fit               Fit    @relation(fields: [fitId], references: [id])
  fitId             Int
  status            Status @relation(fields: [statusId], references: [id])
  statusId          Int
}

model Status {
  id           Int            @id @default(autoincrement())
  status       String
  Homologation Homologation[]
}
